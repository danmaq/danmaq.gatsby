{"version":3,"sources":["webpack:///path---en-blog-2008-04-26-変数-0d2af429a22156ecfe16.js","webpack:///./.cache/json/en-blog-2008-04-26-変数.json"],"names":["webpackJsonp","3224","module","exports","data","markdownRemark","html","frontmatter","cover","date","strDate","title","pathContext","path","langKey"],"mappings":"AAAAA,cAAc,iBAERC,KACA,SAAUC,EAAQC,GCHxBD,EAAAC,SAAkBC,MAAQC,gBAAkBC,KAAA,2/CAAAC,aAAmhDC,MAAA,KAAAC,KAAA,4BAAAC,QAAA,YAAAC,MAAA,cAA2FC,aAAgBC,KAAA,0BAAAC,QAAA","file":"path---en-blog-2008-04-26-変数-0d2af429a22156ecfe16.js","sourcesContent":["webpackJsonp([56816112699964],{\n\n/***/ 3224:\n/***/ (function(module, exports) {\n\n\tmodule.exports = {\"data\":{\"markdownRemark\":{\"html\":\"<ul>\\n<li>\\n<p>Use constant uppercase letters and underscores only for constant definitions (bullet style has no functions such as macros, const, final, so substitute variables).</p>\\n<ul>\\n<li>\\n<p>In principle, variables are prefixed with <a href=\\\"http://ja.wikipedia.org/wiki/%E3%83%8F%E3%83%B3%E3%82%AC%E3%83%AA%E3%82%A2%E3%83%B3%E8%A8%98%E6%B3%95\\\">Hungarian notation</a> , letters of the initial letters of the words are capitalized and words are connected.</p>\\n</li>\\n<li>\\n<p>It is even better to connect the library name to the global variable in the library following the above prefix.</p>\\n</li>\\n<li>\\n<p>[Can] There is no need to forcibly obey the naming conventions, especially local variables with narrow scope.</p>\\n</li>\\n<li>\\n<p><em>Member variables · Access global variables directly without using accessors</em> . Originally it is one of the acts that can not be done by the public in general, but in the case of barrage style this is the cause of big overhead.</p>\\n<h2>Prefix used in Hungarian notation</h2>\\n</li>\\n</ul>\\n</li>\\n</ul>\\n<ul>\\n<li>m <em>:</em> Member variable, global variable _</li>\\n<li>a: Sequence</li>\\n<li>n: Number (long / double type) * 1</li>\\n<li>c: Single character (char type)</li>\\n<li>sz: Character string (char [] type) * 2</li>\\n<li>※ 1 In the case of barrage style I think that it is OK if we unify the prefix as the boundary between long and double is ambiguous (rather all double).</li>\\n<li>* 2 Strings are char [] types, but in principle ac and asz are not.</li>\\n</ul>\",\"frontmatter\":{\"cover\":null,\"date\":\"2008-04-26T00:00:07+09:00\",\"strDate\":\"2008/4/25\",\"title\":\"variable\"}}},\"pathContext\":{\"path\":\"/en/blog/2008/04/26-変数/\",\"langKey\":\"en\"}}\n\n/***/ })\n\n});\n\n\n// WEBPACK FOOTER //\n// path---en-blog-2008-04-26-変数-0d2af429a22156ecfe16.js","module.exports = {\"data\":{\"markdownRemark\":{\"html\":\"<ul>\\n<li>\\n<p>Use constant uppercase letters and underscores only for constant definitions (bullet style has no functions such as macros, const, final, so substitute variables).</p>\\n<ul>\\n<li>\\n<p>In principle, variables are prefixed with <a href=\\\"http://ja.wikipedia.org/wiki/%E3%83%8F%E3%83%B3%E3%82%AC%E3%83%AA%E3%82%A2%E3%83%B3%E8%A8%98%E6%B3%95\\\">Hungarian notation</a> , letters of the initial letters of the words are capitalized and words are connected.</p>\\n</li>\\n<li>\\n<p>It is even better to connect the library name to the global variable in the library following the above prefix.</p>\\n</li>\\n<li>\\n<p>[Can] There is no need to forcibly obey the naming conventions, especially local variables with narrow scope.</p>\\n</li>\\n<li>\\n<p><em>Member variables · Access global variables directly without using accessors</em> . Originally it is one of the acts that can not be done by the public in general, but in the case of barrage style this is the cause of big overhead.</p>\\n<h2>Prefix used in Hungarian notation</h2>\\n</li>\\n</ul>\\n</li>\\n</ul>\\n<ul>\\n<li>m <em>:</em> Member variable, global variable _</li>\\n<li>a: Sequence</li>\\n<li>n: Number (long / double type) * 1</li>\\n<li>c: Single character (char type)</li>\\n<li>sz: Character string (char [] type) * 2</li>\\n<li>※ 1 In the case of barrage style I think that it is OK if we unify the prefix as the boundary between long and double is ambiguous (rather all double).</li>\\n<li>* 2 Strings are char [] types, but in principle ac and asz are not.</li>\\n</ul>\",\"frontmatter\":{\"cover\":null,\"date\":\"2008-04-26T00:00:07+09:00\",\"strDate\":\"2008/4/25\",\"title\":\"variable\"}}},\"pathContext\":{\"path\":\"/en/blog/2008/04/26-変数/\",\"langKey\":\"en\"}}\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/json-loader!./.cache/json/en-blog-2008-04-26-変数.json\n// module id = 3224\n// module chunks = 56816112699964"],"sourceRoot":""}